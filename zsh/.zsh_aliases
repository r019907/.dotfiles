alias copy="pbcopy"
alias fuck="fuck --yeah"
alias rc="nvim ~/.zshrc"
alias aliases="nvim ~/.zsh_aliases"
alias desktop="cd ~/Desktop"
alias ls="lsd"
alias grep="rg"
alias find="fd"
alias cat='bat -p --theme=gruvbox-$(defaults read -g AppleInterfaceStyle &> /dev/null && echo dark || echo light)'

sudo () {
    unset -f sudo
    if [[ "$(uname)" == 'Darwin' ]]
    then
        if ! command grep 'pam_tid.so' /etc/pam.d/sudo --silent
        then
            command sudo sed -i -e '1s;^;auth       sufficient     pam_tid.so\n;' /etc/pam.d/sudo
        fi
        if ! command grep 'pam_reattach.so' /etc/pam.d/sudo --silent
        then
            command sudo sed -i -e '1s;^;auth     optional     pam_reattach.so\n;' /etc/pam.d/sudo
        fi
    fi
    command sudo "$@"
}


alias -s git="git clone"
alias ip="echo Your ip is; dig +short myip.opendns.com @resolver1.opendns.com;"
alias chrome='open -a "/Applications/Google Chrome.app" --args --force-renderer-accessibility'
alias chromeDebug='chrome --remote-debugging-port=9222'
alias rsync="rsync --info=progress2"
alias crontab="EDITOR=/Users/maxkiselev/.local/bin/nvim crontab"

alias git-graph="viddy -t git-graph --color always"
alias git="/opt/homebrew/bin/git"  
alias pgcli="export EDITOR=nvim && pgcli"

alias vim="nvim"
alias code="codium"
alias watch="viddy --no-title"

function asdf {
  if [[ $@ == "" ]]; then
    command "/opt/homebrew/bin/asdf list"
  else
    command "/opt/homebrew/bin/asdf $@"
  fi
}


### asdf ###
function _asdf {
    local cur prev opts
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    opts="list plugin update"
    case "${prev}" in
        plugin)
            opts="add list remove update"
            ;;
        *)
            ;;
    esac
    COMPREPLY=($(compgen -W "${opts}" -- ${cur}))
    return 0
}

complete -F _asdf asdf


alias stow="stow -vt ~ --ignore='^(\.git|\.DS_Store)$' "
alias tree="tree -a -I '.git|.DS_Store'"
alias mk="bonk"


### trash ###
function tr {
    if [[ "$@" == "." ]]; then
      D=${PWD##*/} && cd .. && trash $D || cd $D
    else 
      command trash "$@"
    fi
}


function brew-install() {
    brew install "$@"
    brew list >> ~/.programs
}

function _tr {
  local cur
  COMPREPLY=()
  cur="${COMP_WORDS[COMP_CWORD]}"
  case "${cur}" in
    .)
      COMPREPLY=('.')
      ;;
    *)
      COMPREPLY=($(compgen -f "${cur}"))
      ;;
  esac
}

complete -F _tr tr


### brew ###

function brew {
    if [[ "$1" == "install" && "$2" != '' ]]; then
      shift
      command brew install $@
      command brew list > ~/.programs
    elif [[ "$1" == "uninstall" && "$2" != '' ]]; then
      shift
      command brew uninstall $@
      command brew list > ~/.programs
    else 
      command brew $@
    fi
}

function _brew {
    local cur prev
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    case "${prev}" in
        install|uninstall)
            __brew_complete
            return
            ;;
        *)
            ;;
    esac
    COMPREPLY=($(compgen -W "$(brew commands)" -- "${cur}"))
}

complete -F _brew brew
